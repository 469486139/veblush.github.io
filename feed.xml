<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title></title>
    <description>blog for veblush, programmer</description>
    <link>http://veblush.github.io/</link>
    <atom:link href="http://veblush.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 18 May 2016 08:39:15 +0900</pubDate>
    <lastBuildDate>Wed, 18 May 2016 08:39:15 +0900</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Online game server on Akka.NET</title>
        <description>&lt;p&gt;I made a speech about “Online game server on Akka.NET” at &lt;a href=&quot;https://ndc.nexon.com&quot;&gt;NDC&lt;/a&gt; 2016.
Following are slides and Q&amp;amp;As in the session.&lt;/p&gt;

&lt;h2 id=&quot;slides&quot;&gt;Slides&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/veblush/online-game-server-on-akkanet-ndc2016&quot;&gt;Slideshare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/assets/posts/2016-05-16-online-game-server-on-akkanet/NDC2016_OnlineGameServer_With_AkkaNet_English.pptx&quot;&gt;PPT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h2&gt;

&lt;h4 id=&quot;basic&quot;&gt;Basic&lt;/h4&gt;

&lt;h6 id=&quot;should-i-concern-about-multi-thread-synchronization-and-thread-blocking-on-akkanet&quot;&gt;# Should I concern about multi-thread synchronization and thread-blocking on Akka.NET?&lt;/h6&gt;

&lt;p&gt;Basically, No.
Actor model which akka provides is the another way to write concurrent code
without complex issues such as multi-threading and thread-blocking.&lt;/p&gt;

&lt;h6 id=&quot;is-message-passing-only-method-for-accessing-the-state-of-actor-any-latency-or-io-overhead-related-with&quot;&gt;# Is message passing only method for accessing the state of actor? Any latency or IO overhead related with?&lt;/h6&gt;

&lt;p&gt;Yes. Message passing only and it adds more latency and IO overhead but it’s well-optimized and good to go.&lt;/p&gt;

&lt;h6 id=&quot;what-does-happen-to-child-actors-when-their-parent-actor-stops-is-it-could-be-spof&quot;&gt;# What does happen to child actors when their parent actor stops? Is it could be SPOF?&lt;/h6&gt;

&lt;p&gt;Child actors will stop when their parent actor stops.
SPOF could be handled with high level tools such as akka.cluster not with actor itself.&lt;/p&gt;

&lt;h6 id=&quot;any-performance-problem-when-there-are-lots-of-messages-in-one-actor-mailbox&quot;&gt;# Any performance problem when there are lots of messages in one actor mailbox.&lt;/h6&gt;

&lt;p&gt;One actor processes one message at a time. So that actor will be busy in processing all messages
and take more time to response requests. But it doesn’t affect other actors because they are isolated from each others.&lt;/p&gt;

&lt;h6 id=&quot;how-can-i-synchronize-data-when-one-actor-is-shared-from-several-nodes-in-a-cluster-any-lock-is-required&quot;&gt;# How can I synchronize data when one actor is shared from several nodes in a cluster. Any lock is required?&lt;/h6&gt;

&lt;p&gt;Actor is only accessable via ActorRef so nodes cannot access data of actor just can send a message to it.
When several messages received from nodes, the actor will process a message at a time so no lock is required to synchronize requests.&lt;/p&gt;

&lt;h6 id=&quot;is-there-a-way-to-broadcast-a-message-to-many-actors-on-akkanet&quot;&gt;# Is there a way to broadcast a message to many actors on Akka.NET?&lt;/h6&gt;

&lt;p&gt;Yes. There are two ways for that. First one is using wildcard included 
&lt;a href=&quot;http://getakka.net/docs/Working%20with%20actors#identifying-actors-via-actor-selection&quot;&gt;ActorSelection&lt;/a&gt; and 
second one is using 
&lt;a href=&quot;http://getakka.net/docs/working-with-actors/Routers#broadcast&quot;&gt;Broadcast Router&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;programming-pattern&quot;&gt;Programming Pattern&lt;/h4&gt;

&lt;h6 id=&quot;deadlock-may-occur-when-two-actors-send-a-message-to-each-other-and-await-how-can-we-handle-it&quot;&gt;# Deadlock may occur when two actors send a message to each other and await. How can we handle it?&lt;/h6&gt;

&lt;p&gt;Yes it can cause deadlock. Because of this problem, send and await pattern is &lt;a href=&quot;http://bartoszsypytkowski.com/dont-ask-tell-2/&quot;&gt;not recommended&lt;/a&gt;.
But if you want, there are three workarounds.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Like a lock-use scenario, you can set await hierarchies for actors.
For more info about lock hierarchy, read &lt;a href=&quot;http://www.drdobbs.com/parallel/use-lock-hierarchies-to-avoid-deadlock/204801163&quot;&gt;Use Lock Hierarchies to Avoid Deadlock&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ReentrantAttribute in Akka.Interfaced allows an actor to handle other messages while waiting await response.
This can makes you avoid deadlock but you need to take care of reentrancy in await state.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;mmorpg-can-be-implemented-with-the-actor-model-there-could-be-many-interactions-between-actors-in-mmorpg-and-it-seems-hard-to-build-it&quot;&gt;# MMORPG can be implemented with the actor model? There could be many interactions between actors in MMORPG and it seems hard to build it.&lt;/h6&gt;

&lt;p&gt;If actors depend on each others’ state and need lots of synchronized interactions, it will be hard to build a system with actors. 
Therefore we need a system to make this easy. In case of TicTacToe, there is a GameActor for handling this problem.
This GameActor receives all game commands from users in a game and processes it easily. (It’s like a single-threaded programming.)
If a MMORPG whose world is separate into several isolated zones, you can use same approch for each zones.
But for a MMORPG whose world is not separate such as a seemless world, it will be a challenging work.&lt;/p&gt;

&lt;h6 id=&quot;transaction-for-multiple-actors-for-examples-trade-between-two-users-requires-transaction-to-implement-it&quot;&gt;# Transaction for multiple actors? For examples, trade between two users requires transaction to implement it.&lt;/h6&gt;

&lt;p&gt;If we can sqeeze multiple entities into one actor like zone actor, it will be solve easily.
But an user inventory doesn’t seem to work like this. In this case, regular distributed transation will be an answer.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Two-phase_commit_protocol&quot;&gt;Two-Phase commit protocol&lt;/a&gt; is a common solution and
you can check 
&lt;a href=&quot;http://www.slideshare.net/petabridge/distributed-transactions-in-akkanet&quot;&gt;How do I do transactions across a distributed system?&lt;/a&gt;.&lt;/p&gt;

&lt;h6 id=&quot;any-race-condition-for-trackabledata-set&quot;&gt;# Any race condition for TrackableData Set?&lt;/h6&gt;

&lt;p&gt;No. TrackableData is not for concurrent data modification.
It just tracks the changes of data and propages changes to other systems such as DB and client.
There is no race condition because an actor owns trackabledata instances and processes a message at a time.&lt;/p&gt;

&lt;h4 id=&quot;integration&quot;&gt;Integration&lt;/h4&gt;

&lt;h6 id=&quot;languages-other-than-c-can-interoperate-with-akkanet&quot;&gt;# Languages other than C# can interoperate with Akka.NET?&lt;/h6&gt;

&lt;p&gt;Yes. Any languages supporting .NET such as C#, F# and VB.NET can interoperate with Akka.NET.
However, it’s not easy now for the environment beyond .NET.&lt;/p&gt;

&lt;h6 id=&quot;it-it-easy-or-hard-to-write-test-code-on-akkanet&quot;&gt;# It it easy or hard to write test code on Akka.NET?&lt;/h6&gt;

&lt;p&gt;Fundamentally it is harder than writing test code consisting of calling synchronized methods
because the environment with multiple actors sending messages to each others is not deterministic.
But Akka.NET provides handy tools helping for writing unit tests.
Check out &lt;a href=&quot;https://petabridge.com/blog/how-to-unit-test-akkadotnet-actors-akka-testkit/&quot;&gt;How to Unit Test Akka.NET Actors with Akka.TestKit&lt;/a&gt;.&lt;/p&gt;

&lt;h6 id=&quot;can-akkanet-interop-with-akka-on-jvm&quot;&gt;# Can Akka.NET interop with Akka on JVM?&lt;/h6&gt;

&lt;p&gt;Unfortunately, No. Check this &lt;a href=&quot;https://github.com/akkadotnet/akka.net/issues/1629&quot;&gt;Issue&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;performance&quot;&gt;Performance&lt;/h4&gt;

&lt;h6 id=&quot;it-seems-to-have-performance-issues-do-you-have-stress-tests&quot;&gt;# It seems to have performance issues. Do you have stress tests?&lt;/h6&gt;

&lt;p&gt;Still I don’t have any benchmark on whole system but I did tests on components and results looked good.
From the Akka.NET manual, 50 million msg/sec on a single machine and ~2.5 million actors per GB of heap.&lt;/p&gt;

&lt;h6 id=&quot;latency-could-be-problematic-when-hundreds-of-servers-send-messages-on-network&quot;&gt;# Latency could be problematic when hundreds of servers send messages on network?&lt;/h6&gt;

&lt;p&gt;When an actor send a message to other actor in same machine,
it doens’t use network just put a message in a recipient’s mailbox.
So you need to put actors interacting with each others alot in same machine to avoid network stress.&lt;/p&gt;

&lt;h4 id=&quot;etc&quot;&gt;Etc&lt;/h4&gt;

&lt;h6 id=&quot;you-said-that-monstersweeperz-uses-c-iocp-but-there-is-no-iocp-api-on-net-how-did-you-do&quot;&gt;# You said that MonsterSweeperz uses C# IOCP but there is no IOCP API on .NET how did you do?&lt;/h6&gt;

&lt;p&gt;Yes, there is no IOCP API on .NET and I didn’t make a lib for that.
MonsterSweeperz uses .NET socket which is implemented on IOCP so I said like that.&lt;/p&gt;

&lt;h6 id=&quot;any-problem-with-full-gc-latency-if-not-could-you-tell-me-the-maximum-size-of-heap&quot;&gt;# Any problem with full GC latency? If not, could you tell me the maximum size of heap?&lt;/h6&gt;

&lt;p&gt;MonsterSweeperz has not suffered any GC problems because basic memory optimization already has been done
and quick responsiveness was not a requirement of system. The maximum size of heap was about 1-2 GB.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 May 2016 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/online-game-server-on-akkanet/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/online-game-server-on-akkanet/</guid>
        
        
        <category>akkanet</category>
        
      </item>
    
      <item>
        <title>How I build my blog using Jekyll</title>
        <description>&lt;p&gt;Recently I has been building blog. It was expected to take
at most 2 days but more time spent because of some traps.
But anyway it’s done!&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Simple UI&lt;/li&gt;
  &lt;li&gt;Easy to insert code blocks and math expressions&lt;/li&gt;
  &lt;li&gt;Supports both english and korean&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;works&quot;&gt;Works&lt;/h2&gt;

&lt;h5 id=&quot;create-github-repository&quot;&gt;# Create Github repository&lt;/h5&gt;

&lt;p&gt;Personal github repository 
&lt;a href=&quot;https://github.com/veblush/veblush.github.io&quot;&gt;veblush.github.io&lt;/a&gt; is created
for hosting blog by &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; service.
Github provides the neat way to build sites from Jekyll source pages automatically
but it cannot be used because using plugins is not allowed by github.
So manual build process have to be prepared.&lt;/p&gt;

&lt;h5 id=&quot;install-jekyll-3&quot;&gt;# Install Jekyll 3&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; 3.1.3 is installed.
With ruby gem utility, it is quite easy.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;theme&quot;&gt;# Theme&lt;/h5&gt;

&lt;p&gt;I don’t have the ability to design web sites and don’t have time to do it, either.
So I decided to use theme but choosing right theme among tons of themes is really
time-consuming and hard-to-pick work.
But accidently tidy blog &lt;a href=&quot;http://nithinbekal.com&quot;&gt;nithinbekal&lt;/a&gt; was found and
the theme of that was chosen to use. It looks simple and best fit to my requirement.
Based on this theme, layout and css has been modified slightly.&lt;/p&gt;

&lt;h5 id=&quot;setup-polyglot-plugin&quot;&gt;# Setup Polyglot plugin&lt;/h5&gt;

&lt;p&gt;Official i18n support is not provided by Jekyll. There are a few ways for supporting it.
&lt;a href=&quot;http://untra.github.io/polyglot/&quot;&gt;Polyglot&lt;/a&gt; was chosen for this blog
because it seemed simple to use and neat. 
However it took many hours to setup it because I was not familar with
the detail of Jekyll and there was a weird bug of polyglot active on windows.
Finally this bug is &lt;a href=&quot;https://github.com/untra/polyglot/commit/3280a2d84da1a36929fb5615426349dc6cccf4c3&quot;&gt;fixed&lt;/a&gt;
and it works well now.&lt;/p&gt;

&lt;h5 id=&quot;setup-asset-path-plugin&quot;&gt;# Setup Asset Path plugin&lt;/h5&gt;

&lt;p&gt;It seems better to allocate local storage for each post because some of post have
lots of images or diagrams generated with graphviz which are not shared by other posts.
&lt;a href=&quot;https://github.com/samrayner/jekyll-asset-path-plugin&quot;&gt;Jekyll Asset Path&lt;/a&gt; is installed for this.
It works well and is slightly modified to support Polyglot and my own directory naming rule.&lt;/p&gt;

&lt;h5 id=&quot;import-old-blogs&quot;&gt;# Import old blogs&lt;/h5&gt;

&lt;p&gt;All posts from previous blog can be imported as HTML format. These HTML articles are tranformed
to markdown with &lt;a href=&quot;https://www.pandadoc.com/&quot;&gt;Pandadoc&lt;/a&gt;. Most of them are good but there are some
incorrect markdowns that should be corrected by hand.
Image links are changed to fit asset directory and math expressions are converted to
kramdown &lt;a href=&quot;http://kramdown.gettalong.org/math_engine/mathjax.html&quot;&gt;form&lt;/a&gt;.
Fortunately it doens’t take long because there are not many articles to be imported.&lt;/p&gt;

&lt;h5 id=&quot;write-publish-script&quot;&gt;# Write publish script&lt;/h5&gt;

&lt;p&gt;Two branches are created on Github repository.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;site branch: Working branch for storing original source of blog.&lt;/li&gt;
  &lt;li&gt;master branch: Output branch for storing the result of Jekyll from site branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/veblush/veblush.github.io/blob/site/publish.cmd&quot;&gt;Publish script&lt;/a&gt;
will run Jekyll at site branch and copy output to master branch to update blog.&lt;/p&gt;

</description>
        <pubDate>Sat, 14 May 2016 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/how-build-blog-using-jekyll/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/how-build-blog-using-jekyll/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Why I move to Jekyll for my blog</title>
        <description>&lt;p&gt;I used common blog service in creating my blog at 2012.
Blog service was good to write blog right after a few clicks even
it had some drawbacks.
Theseday I have some spare time for this and decide to change it.&lt;/p&gt;

&lt;h2 id=&quot;drawbacks-of-blog-service&quot;&gt;Drawbacks of blog service&lt;/h2&gt;

&lt;h5 id=&quot;not-easy-to-embed-code-and-math-expression&quot;&gt;# Not easy to embed code and math expression&lt;/h5&gt;

&lt;p&gt;Embeding code is not easy. My blog has lots of code blocks to be embeded.
Whenever code need to be inserted, I switch blog to HTML mode and insert
a few HTML code for that and switch it back to writing mode,
which is quite bothersome.&lt;/p&gt;

&lt;p&gt;Embeding math expression is not easy, too. There is a nice web service to
provide the way to convert LaTeX math expression to an image dynamically.
I used it happily but it requires some manual steps. Also my blog depends on
external service that could be down for maintenance or disappear forever.&lt;/p&gt;

&lt;h5 id=&quot;need-to-store-original-data-of-diagram-separately&quot;&gt;# Need to store original data of diagram separately&lt;/h5&gt;

&lt;p&gt;GraphViz and Excel are used for authoring graph and chart which are converted
to images and inserted to blog. For futhur updates, source files
should be stored but because blog service does not provide storage, I backup
these files to the separate place, which is tiresome and easy to forget.&lt;/p&gt;

&lt;h2 id=&quot;why-i-choose-jekyll&quot;&gt;Why I choose Jekyll&lt;/h2&gt;

&lt;h5 id=&quot;easy-to-embed-code-and-math-expression&quot;&gt;# Easy to embed code and math expression&lt;/h5&gt;

&lt;p&gt;If you are accustomed to using markdown, it is really hard to imagine a better
way than using markdown to insert a code block.
Jekyll uses &lt;a href=&quot;http://kramdown.gettalong.org/&quot;&gt;kramdown&lt;/a&gt; as a default
markdown engine which is goot at dealing with code and math expression.&lt;/p&gt;

&lt;p&gt;Code block with syntax highlighting is rendered like:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fancyAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;facebox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Math expression by LaTeX format is rendered like:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{n!}{k!(n-k)!} = {n \choose k}&lt;/script&gt;

&lt;h5 id=&quot;hosting-on-github&quot;&gt;# Hosting on Github&lt;/h5&gt;

&lt;p&gt;Github provides pages service for hosting a static web site.
It’s free and good to keep original source files of diagram and chart along with web site.&lt;/p&gt;

&lt;h5 id=&quot;simple-architecture-and-highly-customizable&quot;&gt;# Simple architecture and highly customizable&lt;/h5&gt;

&lt;p&gt;Jekyll is a simple tool to transform plain texts to htmls.
It’s easy to understand and can be customized as you want.
With greate customization comes great labor.
In my case, multi langauge plugin &lt;a href=&quot;https://untra.github.io/polyglot/&quot;&gt;polyglot&lt;/a&gt; is used to support
english and korean at the same time.&lt;/p&gt;

</description>
        <pubDate>Fri, 13 May 2016 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/why-move-to-jekyll/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/why-move-to-jekyll/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Python n-grouper</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Feb 2013 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/python-n-grouper/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/python-n-grouper/</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Parsing with GOLD Parser</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Dec 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/parsing-with-gold-parser/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/parsing-with-gold-parser/</guid>
        
        
        <category>parser</category>
        
      </item>
    
      <item>
        <title>Filename case sensitivity</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 09 Dec 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/filename-case-sensitivity/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/filename-case-sensitivity/</guid>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>C++11 variadic trio</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Nov 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/cpp11-variadic-trio/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/cpp11-variadic-trio/</guid>
        
        
        <category>cpp</category>
        
      </item>
    
      <item>
        <title>C++11 rvalue references and move constructors</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Nov 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/cpp11-rvalue-references-and-move-constructors/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/cpp11-rvalue-references-and-move-constructors/</guid>
        
        
        <category>cpp</category>
        
      </item>
    
      <item>
        <title>How windows installer works and free space of SSD</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Nov 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/how-windows-installer-works-and-ssd/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/how-windows-installer-works-and-ssd/</guid>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Migration strategies of version control system</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Oct 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/vcs-migration-strategy/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/vcs-migration-strategy/</guid>
        
        
        <category>vcs</category>
        
      </item>
    
  </channel>
</rss>
