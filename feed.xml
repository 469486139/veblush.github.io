<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title></title>
    <description>blog for veblush, programmer</description>
    <link>http://veblush.github.io/</link>
    <atom:link href="http://veblush.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 May 2016 08:54:03 +0900</pubDate>
    <lastBuildDate>Mon, 16 May 2016 08:54:03 +0900</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>How I build my blog using Jekyll</title>
        <description>&lt;p&gt;Recently I has been building blog. It was expected to take
at most 2 days but more time spent because of some traps.
But anyway it’s done!&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Simple UI&lt;/li&gt;
  &lt;li&gt;Easy to insert code blocks and math expressions&lt;/li&gt;
  &lt;li&gt;Supports both english and korean&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;works&quot;&gt;Works&lt;/h2&gt;

&lt;h5 id=&quot;create-github-repository&quot;&gt;# Create Github repository&lt;/h5&gt;

&lt;p&gt;Personal github repository 
&lt;a href=&quot;https://github.com/veblush/veblush.github.io&quot;&gt;veblush.github.io&lt;/a&gt; is created
for hosting blog by &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; service.
Github provides the neat way to build sites from Jekyll source pages automatically
but it cannot be used because using plugins is not allowed by github.
So manual build process have to be prepared.&lt;/p&gt;

&lt;h5 id=&quot;install-jekyll-3&quot;&gt;# Install Jekyll 3&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; 3.1.3 is installed.
With ruby gem utility, it is quite easy.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;theme&quot;&gt;# Theme&lt;/h5&gt;

&lt;p&gt;I don’t have the ability to design web sites and don’t have time to do it, either.
So I decided to use theme but choosing right theme among tons of themes is really
time-consuming and hard-to-pick work.
But accidently tidy blog &lt;a href=&quot;http://nithinbekal.com&quot;&gt;nithinbekal&lt;/a&gt; was found and
the theme of that was chosen to use. It looks simple and best fit to my requirement.
Based on this theme, layout and css has been modified slightly.&lt;/p&gt;

&lt;h5 id=&quot;setup-polyglot-plugin&quot;&gt;# Setup Polyglot plugin&lt;/h5&gt;

&lt;p&gt;Official i18n support is not provided by Jekyll. There are a few ways for supporting it.
&lt;a href=&quot;http://untra.github.io/polyglot/&quot;&gt;Polyglot&lt;/a&gt; was chosen for this blog
because it seemed simple to use and neat. 
However it took many hours to setup it because I was not familar with
the detail of Jekyll and there was a weird bug of polyglot active on windows.
Finally this bug is &lt;a href=&quot;https://github.com/untra/polyglot/commit/3280a2d84da1a36929fb5615426349dc6cccf4c3&quot;&gt;fixed&lt;/a&gt;
and it works well now.&lt;/p&gt;

&lt;h5 id=&quot;setup-asset-path-plugin&quot;&gt;# Setup Asset Path plugin&lt;/h5&gt;

&lt;p&gt;It seems better to allocate local storage for each post because some of post have
lots of images or diagrams generated with graphviz which are not shared by other posts.
&lt;a href=&quot;https://github.com/samrayner/jekyll-asset-path-plugin&quot;&gt;Jekyll Asset Path&lt;/a&gt; is installed for this.
It works well and is slightly modified to support Polyglot and my own directory naming rule.&lt;/p&gt;

&lt;h5 id=&quot;import-old-blogs&quot;&gt;# Import old blogs&lt;/h5&gt;

&lt;p&gt;All posts from previous blog can be imported as HTML format. These HTML articles are tranformed
to markdown with &lt;a href=&quot;https://www.pandadoc.com/&quot;&gt;Pandadoc&lt;/a&gt;. Most of them are good but there are some
incorrect markdowns that should be corrected by hand.
Image links are changed to fit asset directory and math expressions are converted to
kramdown &lt;a href=&quot;http://kramdown.gettalong.org/math_engine/mathjax.html&quot;&gt;form&lt;/a&gt;.
Fortunately it doens’t take long because there are not many articles to be imported.&lt;/p&gt;

&lt;h5 id=&quot;write-publish-script&quot;&gt;# Write publish script&lt;/h5&gt;

&lt;p&gt;Two branches are created on Github repository.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;site branch: Working branch for storing original source of blog.&lt;/li&gt;
  &lt;li&gt;master branch: Output branch for storing the result of Jekyll from site branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/veblush/veblush.github.io/blob/site/publish.cmd&quot;&gt;Publish script&lt;/a&gt;
will run Jekyll at site branch and copy output to master branch to update blog.&lt;/p&gt;

</description>
        <pubDate>Sat, 14 May 2016 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/how-build-blog-using-jekyll/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/how-build-blog-using-jekyll/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Why I move to Jekyll for my blog</title>
        <description>&lt;p&gt;I used common blog service in creating my blog at 2012.
Blog service was good to write blog right after a few clicks even
it had some drawbacks.
Theseday I have some spare time for this and decide to change it.&lt;/p&gt;

&lt;h2 id=&quot;drawbacks-of-blog-service&quot;&gt;Drawbacks of blog service&lt;/h2&gt;

&lt;h5 id=&quot;not-easy-to-embed-code-and-math-expression&quot;&gt;# Not easy to embed code and math expression&lt;/h5&gt;

&lt;p&gt;Embeding code is not easy. My blog has lots of code blocks to be embeded.
Whenever code need to be inserted, I switch blog to HTML mode and insert
a few HTML code for that and switch it back to writing mode,
which is quite bothersome.&lt;/p&gt;

&lt;p&gt;Embeding math expression is not easy, too. There is a nice web service to
provide the way to convert LaTeX math expression to an image dynamically.
I used it happily but it requires some manual steps. Also my blog depends on
external service that could be down for maintenance or disappear forever.&lt;/p&gt;

&lt;h5 id=&quot;need-to-store-original-data-of-diagram-separately&quot;&gt;# Need to store original data of diagram separately&lt;/h5&gt;

&lt;p&gt;GraphViz and Excel are used for authoring graph and chart which are converted
to images and inserted to blog. For futhur updates, source files
should be stored but because blog service does not provide storage, I backup
these files to the separate place, which is tiresome and easy to forget.&lt;/p&gt;

&lt;h2 id=&quot;why-i-choose-jekyll&quot;&gt;Why I choose Jekyll&lt;/h2&gt;

&lt;h5 id=&quot;easy-to-embed-code-and-math-expression&quot;&gt;# Easy to embed code and math expression&lt;/h5&gt;

&lt;p&gt;If you are accustomed to using markdown, it is really hard to imagine a better
way than using markdown to insert a code block.
Jekyll uses &lt;a href=&quot;http://kramdown.gettalong.org/&quot;&gt;kramdown&lt;/a&gt; as a default
markdown engine which is goot at dealing with code and math expression.&lt;/p&gt;

&lt;p&gt;Code block with syntax highlighting is rendered like:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fancyAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;facebox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Math expression by LaTeX format is rendered like:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{n!}{k!(n-k)!} = {n \choose k}&lt;/script&gt;

&lt;h5 id=&quot;hosting-on-github&quot;&gt;# Hosting on Github&lt;/h5&gt;

&lt;p&gt;Github provides pages service for hosting a static web site.
It’s free and good to keep original source files of diagram and chart along with web site.&lt;/p&gt;

&lt;h5 id=&quot;simple-architecture-and-highly-customizable&quot;&gt;# Simple architecture and highly customizable&lt;/h5&gt;

&lt;p&gt;Jekyll is a simple tool to transform plain texts to htmls.
It’s easy to understand and can be customized as you want.
With greate customization comes great labor.
In my case, multi langauge plugin &lt;a href=&quot;https://untra.github.io/polyglot/&quot;&gt;polyglot&lt;/a&gt; is used to support
english and korean at the same time.&lt;/p&gt;

</description>
        <pubDate>Fri, 13 May 2016 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/why-move-to-jekyll/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/why-move-to-jekyll/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Python n-grouper</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Feb 2013 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/python-n-grouper/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/python-n-grouper/</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Parsing with GOLD Parser</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Dec 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/parsing-with-gold-parser/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/parsing-with-gold-parser/</guid>
        
        
        <category>parser</category>
        
      </item>
    
      <item>
        <title>Filename case sensitivity</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 09 Dec 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/filename-case-sensitivity/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/filename-case-sensitivity/</guid>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>C++11 variadic trio</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Nov 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/cpp11-variadic-trio/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/cpp11-variadic-trio/</guid>
        
        
        <category>cpp</category>
        
      </item>
    
      <item>
        <title>C++11 rvalue references and move constructors</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Nov 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/cpp11-rvalue-references-and-move-constructors/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/cpp11-rvalue-references-and-move-constructors/</guid>
        
        
        <category>cpp</category>
        
      </item>
    
      <item>
        <title>How windows installer works and free space of SSD</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Nov 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/how-windows-installer-works-and-ssd/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/how-windows-installer-works-and-ssd/</guid>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Migration strategies of version control system</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Oct 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/vcs-migration-strategy/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/vcs-migration-strategy/</guid>
        
        
        <category>vcs</category>
        
      </item>
    
      <item>
        <title>Repository management guideline for version control system</title>
        <description>&lt;p&gt;&lt;em&gt;Oops sorry! English post is not available.&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 26 Oct 2012 00:00:00 +0900</pubDate>
        <link>http://veblush.github.io/posts/vcs-management-guideline/</link>
        <guid isPermaLink="true">http://veblush.github.io/posts/vcs-management-guideline/</guid>
        
        
        <category>vcs</category>
        
      </item>
    
  </channel>
</rss>
